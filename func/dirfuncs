#!/bin/bash (just so 'file' says the right thing)

# Written by David Boyce ~1995 and placed in the public domain.

# Convenience enhancements to bash's builtin pushd/popd/dirs implementation
# including the following added features:
#
# 1. This version allows you to access the first stacked directory using
#    $lwd ("last working directory") as a shorthand for ${DIRSTACK[1]}.
# 2. It allows you to say "cd <filename>" or "pushd <filename>" to go
#    to "$(dirname <filename>)". Makes copy/paste of paths easier.
# 3. It will not push a dir to the stack that's already in the stack.
#    Pushing to a dir already on the stack rotates it to the top.
# 4. It can move "up" a certain number of levels with "pushd ^n" or "cd ^n".
#    I.e. "pushd ^4" is a synonym for "pushd ../../../..".

function cd
{
    # Allow cd-ing to a file (use its parent directory).
    typeset _tgt=${!#}
    if [[ $# > 0 && "$_tgt" != -* ]]; then
        # Allow cd-ing to a URL; assume the RHS is a local path.
        [[ "$_tgt" != http://* ]] || _tgt=/${_tgt#http://[a-zA-Z_-.]*/}
        # Allow cd-ing to a file (use its parent directory).
        if [[ -f "$_tgt" || ( -L "$_tgt" && ! -e "$_tgt" ) ]]; then
            _tgt="${_tgt%/*}"
        fi
        # Allow ^n to mean "n parent directories".
        if [[ "$_tgt" = ^[1-9] ]]; then
            typeset _dots=
            typeset -i _i=${_tgt/^/}
            while (( $_i > 0 )); do
                let _i--
                _dots=${_dots}../
            done
            _tgt=${_dots%/}
        fi
        builtin cd "$_tgt"
    else
        builtin cd "$@"
    fi
}

function _uniqify_dirs
{
    # Remove accidental redundancies from dir stack. This can
    # happen via e.g. "pushd /var; pushd /var/tmp; cd ..".
    # Bash doesn't allow direct modification of DIRSTACK.
    typeset -a _r _s
    typeset _dir _d _i=0 _n=${#DIRSTACK[@]}
    while [[ $_i < $_n ]]; do
        eval _dir="${DIRSTACK[$_i]}"
        for _d in "${_s[@]}"; do
            if [[ "$_dir" = "$_d" ]]; then
                _r=($_i ${_r[@]})
                break
            fi
        done
        _s=("${_s[@]}" $_dir)
        let _i=_i+1
    done
    for _i in "${_r[@]}"; do
        popd +$_i >/dev/null
    done
}

function pushd
{
    if [[ -n "$1" ]]; then
        typeset _tgt=${1%/}; shift
        # Allow pushd-ing to a URL; assume the RHS is a local path.
        [[ "$_tgt" != http://* ]] || _tgt=/${_tgt#http://[a-zA-Z_-.]*/}
        # Allow pushd-ing to a file (use its parent directory).
        if [[ -f "$_tgt" || ( -L "$_tgt" && ! -e "$_tgt" ) ]]; then
            _tgt="${_tgt%/*}"
        fi
        typeset -i _i=${#DIRSTACK[@]}
        while (( $_i > 0 )); do
            let _i--
            if [[ "${DIRSTACK[$_i]}" = "$_tgt" ]]; then
                unset _tgt
                break
            fi
        done
        if [[ -n "$_tgt" ]]; then
            # Allow ^n to mean "n parent directories".
            if [[ "$_tgt" = ^[1-9] ]]; then
                typeset _dots=
                typeset -i _i=${_tgt/^/}
                while (( $_i > 0 )); do
                    let _i--
                    _dots=${_dots}../
                done
                builtin pushd ${_dots%/}
            else
                set -- "$_tgt" "$@"
                builtin pushd "$@"
            fi
        else
            builtin pushd +$_i
        fi
    else
        builtin pushd
    fi
    _uniqify_dirs "$@"
    lwd=${DIRSTACK[1]}
}

function popd
{
    builtin popd "$@"
    _uniqify_dirs "$@"
    lwd=${DIRSTACK[1]}
}

function dirs
{
    _uniqify_dirs "$@"
    builtin dirs "$@"
}

# Keep tabs out since human users can't agree on tabstops.
# vim: filetype=sh:sw=4:tw=80:et:
