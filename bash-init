#####################################################################
# DO NOT CHANGE THIS FILE LOCALLY! It provides only a framework
# for finding your own bash config files at ~/.bash-topshell and
# ~/.bash-pershell. Make your customizations there.  See the README
# file in the same directory as this file for details.
#####################################################################

# Normally not used, but if used must not be propagated!
unset BASH_ENV

# Find the config files to be sourced.
export BASHRC=${BASH_SOURCE[0]%/*}
if [[ "$*" == *-user=* ]]; then
    # Source standard/versioned config files of specified user.
    for arg in "$@"; do
	if [[ $arg == -user=* ]]; then
	    eval ${arg#-}
	    break
	fi
    done
    topshell=$BASHRC/USERS/$user/topshell
    pershell=$BASHRC/USERS/$user/pershell
    if [[ ! -f $topshell ]]; then
	echo "Error: no init files in ${topshell%/*}" >&2
	return 2
    fi
else
    user=${LOGNAME:-$(logname)}
    topshell=~/.bash-topshell
    pershell=~/.bash-pershell
fi

# These functions can be used in setting up PATH variables.
source $BASHRC/func/pathfuncs

#####################################################################
# Exported settings belong in ~/.bash-topshell
#####################################################################
if [[ "$BASH_INIT" != *$user* ]]; then
    # Use "source $BASHRC/bash-init -reset" to force an initial PATH setting
    if [[ "$*" == *-reset* ]]; then
	unset BASH_INIT
	PATH=/bin:/usr/bin
	[[ ! -r /etc/profile ]] || source /etc/profile
    fi

    [[ "$*" != *-debug* ]] || echo "INITIALIZING ENVIRONMENT SETTINGS in $$ FROM $topshell" >&2
    source $topshell

    cleanpath PATH

    export BASH_INIT=${BASH_INIT:+$BASH_INIT:}$user
fi

#####################################################################
# Interactive settings belong in ~/.bash-pershell
#####################################################################
if [[ "$*" == *-pershell* && -f $pershell ]]; then
    [[ "$*" != *-debug* ]] || echo "INITIALIZING INTERACTIVE SETTINGS in $$ FROM $pershell" >&2
    source $pershell
fi

unset topshell pershell user
